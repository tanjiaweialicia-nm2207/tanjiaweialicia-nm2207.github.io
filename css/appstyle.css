html, body {
  height:100%;
  width:100%;
  background-color: hsla(335, 30%, 84%);
}

/* Sections of Layout
-------------------------------------- */
/* Generic styles for demo purposes
-------------------------------------- */
.container {
  font-family: 'Times New Roman', Times, serif;
  height: 98%;
  width: 98%;
  background-color: hsla(331, 50, 78, 0.8);
}

.container > * {
  background-color: rgba(255, 255, 255, 0.725);
  padding: 1em;
}

/* Typically, you wouldn't specify a height or min-height on this, instead allowing your actual content (i.e., text, images, etc.) to dictate the height of your content area. But since this example has very minimal content, I've set a min-height to mimic a taller content area. */
.content {
  min-height: 80%;
  overflow-y: auto;
}

/* Layout is stacked vertically by default (for narrower viewports), so give some breathing room between the sections. */
/* Select all elements where parent is a container */
.container > * {
  margin-bottom: 2%;
}

.canvas-container {
  height: 40%;
  width: 50%;
}

/* Now let's apply grid for wider viewports. */
@media screen and (min-width: 40em) {
  .container > * {
    margin-bottom: 0;
  }
  /* Define the grid */
  .container {
    display: grid;
    grid-template-columns: 25% 56% 15%;
    grid-gap: 2% 2%;
    grid-template-rows: 10% auto 10%;
  }
  /* Place items on the grid */
  .header {
    grid-column: 1 / span 3;

  }
  .sidebar {
    grid-row-end: span 2;
  }
  .content {
    grid-column: 2;
  }

}

/* Various font sizes can be resized here! Just refer to h1, h2 etc. to standardize font size. Have fun! */

h1 { /* this refers to headings like title */
  font-weight: bold;
  text-align: center;
  font-size: 25px;
}

h2 { /* this refers to sub-headings, less important details */
  font-weight: bold;
  text-align: left;
  font-size: 20px;
}

/* This row is for resizing/styling images placed on the original website. Have loads of fun memeing!*/
